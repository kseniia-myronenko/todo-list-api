---
swagger: '2.0'
info:
  title: Todo-List API V1
  version: v1
definitions:
  all_projects:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              minLength: 1
            type:
              type: string
              minLength: 1
            attributes:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    minLength: 1
                required:
                - name
            relationships:
              type: array
              items:
                type: object
                properties:
                  user:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                minLength: 1
                              type:
                                type: string
                                minLength: 1
                            required:
                            - id
                            - type
                      required:
                      - data
                required:
                - user
          required:
          - id
          - type
          - attributes
          - relationships
      included:
        type: array
        items:
          type: object
    required:
    - data
  single_project:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            type: string
            minLength: 1
          type:
            type: string
            minLength: 1
          attributes:
            type: object
            properties:
              name:
                type: string
                minLength: 1
              tasks:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      minLength: 1
                    name:
                      type: string
                      minLength: 1
                    project_id:
                      type: string
                      minLength: 1
                    created_at:
                      type: string
                      minLength: 1
                    updated_at:
                      type: string
                      minLength: 1
                    done:
                      type: boolean
                      not:
                        type: 'null'
                    deadline:
                      type:
                      - 'null'
                      - string
                    position:
                      type: integer
                      not:
                        type: 'null'
                  required:
                  - id
                  - name
                  - project_id
                  - created_at
                  - updated_at
                  - done
                  - deadline
                  - position
            required:
            - name
            - tasks
          relationships:
            type: object
            properties:
              user:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                      type:
                        type: string
                        minLength: 1
                    required:
                    - id
                    - type
                required:
                - data
            required:
            - user
        required:
        - id
        - type
        - attributes
        - relationships
    required:
    - data
  all_tasks:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              minLength: 1
            type:
              type: string
              minLength: 1
            attributes:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    minLength: 1
                  done:
                    type: boolean
                    not:
                      type: 'null'
                  deadline:
                    type:
                    - 'null'
                    - string
                  position:
                    type: integer
                    not:
                      type: 'null'
                required:
                - name
                - done
                - deadline
                - position
            relationships:
              type: array
              items:
                type: object
                properties:
                  project:
                    type: array
                    items:
                      type: object
                      properties:
                        data:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                minLength: 1
                              type:
                                type: string
                                minLength: 1
                            required:
                            - id
                            - type
                      required:
                      - data
                required:
                - project
          required:
          - id
          - type
          - attributes
          - relationships
    required:
    - data
  single_task:
    type: object
    properties:
      data:
        type: object
        properties:
          id:
            type: string
            minLength: 1
          type:
            type: string
            minLength: 1
          attributes:
            type: object
            properties:
              name:
                type: string
                minLength: 1
              done:
                type: boolean
                not:
                  type: 'null'
              deadline:
                type:
                - 'null'
                - string
              position:
                type: integer
                not:
                  type: 'null'
            required:
            - name
            - done
            - deadline
            - position
          relationships:
            type: object
            properties:
              project:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                      type:
                        type: string
                        minLength: 1
                    required:
                    - id
                    - type
                required:
                - data
            required:
            - project
        required:
        - id
        - type
        - attributes
        - relationships
    required:
    - data
securityDefinitions:
  basic_auth:
    type: basic
paths:
  "/api/v1":
    get:
      summary: show projects
      tags:
      - projects
      produces:
      - application/json
      security:
      - basicAuth: []
      responses:
        '200':
          description: successful
          schema:
            anyOf:
            - "$ref": "#/definitions/all_projects"
            - {}
        '401':
          description: unauthorized
  "/api/v1/projects":
    post:
      summary: create new project
      consumes:
      - multipart/form-data
      produces:
      - application/json
      tags:
      - projects
      security:
      - basicAuth: []
      parameters:
      - name: name
        in: formData
        type: string
        required: true
      responses:
        '201':
          description: created
          schema:
            type: object
            "$ref": "#/definitions/single_project"
        '422':
          description: unprocessable_entity
          schema:
            type: object
            properties:
              errors:
                type: object
        '401':
          description: unauthorized
  "/api/v1/projects/{id}":
    get:
      summary: show project
      produces:
      - application/json
      tags:
      - projects
      security:
      - basicAuth: []
      parameters:
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: position
        in: query
        type: string
        enum:
        - asc
        - desc
        required: false
        description: Sorting current project's tasks by position asc or desc.
      - name: created_at
        in: query
        type: string
        enum:
        - asc
        - desc
        required: false
        description: Sorting current project's tasks by created_at asc or desc.
      responses:
        '200':
          description: successful
          schema:
            type: object
            "$ref": "#/definitions/single_project"
        '404':
          description: not_found
        '401':
          description: unauthorized
    put:
      summary: update project
      consumes:
      - multipart/form-data
      produces:
      - application/json
      tags:
      - projects
      security:
      - basicAuth: []
      parameters:
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: name
        in: formData
        type: string
        required: true
      responses:
        '200':
          description: successful
          schema:
            type: object
            "$ref": "#/definitions/single_project"
        '422':
          description: unprocessable_entity
          schema:
            type: object
            properties:
              errors:
                type: object
        '401':
          description: unauthorized
    delete:
      summary: delete project
      tags:
      - projects
      security:
      - basicAuth: []
      parameters:
      - name: id
        in: path
        type: string
        description: id
        required: true
      responses:
        '204':
          description: no_content
        '401':
          description: unauthorized
  "/api/v1/signup":
    post:
      summary: create account
      consumes:
      - multipart/form-data
      produces:
      - application/json
      tags:
      - registration
      parameters:
      - name: username
        in: formData
        type: string
        required: true
      - name: password
        in: formData
        type: string
        required: true
      - name: password_confirmation
        in: formData
        type: string
        required: true
      responses:
        '422':
          description: unprocessable_entity
          schema:
            type: object
            properties:
              errors:
                type: object
  "/api/v1/login":
    post:
      summary: create session
      consumes:
      - multipart/form-data
      produces:
      - application/json
      tags:
      - session
      parameters:
      - name: username
        in: formData
        required: true
        schema:
          type: string
          minimum: 3
          maximum: 50
      - name: password
        in: formData
        required: true
        schema:
          type: string
          minimum: 8
      responses:
        '401':
          description: unprocessable_entity
          schema:
            type: object
            properties:
              errors:
                type: object
  "/api/v1/logout":
    delete:
      summary: delete session
      tags:
      - session
      responses:
        '200':
          description: successfull
          schema:
            type: object
            properties:
              message:
                type: string
  "/api/v1/projects/{project_id}/tasks":
    post:
      summary: create task
      parameters:
      - name: project_id
        in: path
        type: string
        description: project_id
        required: true
      - name: name
        in: formData
        type: string
        required: true
      consumes:
      - multipart/form-data
      produces:
      - application/json
      security:
      - basicAuth: []
      tags:
      - tasks
      responses:
        '201':
          description: created
          schema:
            type: object
            "$ref": "#/definitions/single_task"
        '422':
          description: unprocessable_entity
          schema:
            type: object
            properties:
              errors:
                type: object
        '401':
          description: unauthorized
  "/api/v1/projects/{project_id}/tasks/{id}":
    get:
      summary: show task
      produces:
      - application/json
      security:
      - basicAuth: []
      tags:
      - tasks
      parameters:
      - name: project_id
        in: path
        type: string
        description: project_id
        required: true
      - name: id
        in: path
        type: string
        description: id
        required: true
      responses:
        '200':
          description: successful
          schema:
            type: object
            "$ref": "#/definitions/single_task"
        '404':
          description: not_found
        '401':
          description: unauthorized
    put:
      summary: update task
      parameters:
      - name: project_id
        in: path
        type: string
        description: project_id
        required: true
      - name: id
        in: path
        type: string
        description: id
        required: true
      - name: name
        in: formData
        type: string
        required: true
      consumes:
      - multipart/form-data
      produces:
      - application/json
      security:
      - basicAuth: []
      tags:
      - tasks
      responses:
        '200':
          description: successfull
          schema:
            type: object
            "$ref": "#/definitions/single_task"
        '422':
          description: unprocessable_entity
          schema:
            type: object
            properties:
              errors:
                type: object
        '401':
          description: unauthorized
    delete:
      summary: delete task
      parameters:
      - name: project_id
        in: path
        type: string
        description: project_id
        required: true
      - name: id
        in: path
        type: string
        description: id
        required: true
      produces:
      - application/json
      security:
      - basicAuth: []
      tags:
      - tasks
      responses:
        '204':
          description: no_content
        '404':
          description: not_found
        '401':
          description: unauthorized
